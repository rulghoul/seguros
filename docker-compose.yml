services:
  postgresql:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  redis:
    image: redis
    volumes:
      - redis_data:/data

  django:
    image: seguros:lasted
    entrypoint: ["bash", "entrypoint.sh"]
    volumes:
      - static:/seguros/seguros/static
      - media:/seguros/seguros/media
    environment:
      SEGUROS_SUPERUSER_PASSWORD: ${SEGUROS_SUPERUSER_PASSWORD}
      SEGUROS_SUPERUSER_EMAIL: ${SEGUROS_SUPERUSER_EMAIL}
      SEGUROS_SUPERUSER_USERNAME: ${SEGUROS_SUPERUSER_USERNAME}
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      SEGUROS_ALLOWED_HOSTS: ${SEGUROS_ALLOWED_HOSTS}
      SEGUROS_CSRF_TRUSTED_ORIGINS: ${SEGUROS_CSRF_TRUSTED_ORIGINS}
      SEGUROS_SQL_ENGINE: django.db.backends.postgresql
      SEGUROS_SQL_DATABASE: ${POSTGRES_DB}
      SEGUROS_SQL_USER: ${POSTGRES_USER}
      SEGUROS_SQL_PASSWORD: ${POSTGRES_PASSWORD}
      SEGUROS_SQL_HOST: postgresql
      SEGUROS_SQL_PORT: ${SEGUROS_SQL_PORT}
      SEGUROS_REDIS: "redis://redis:6379"
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_DEAFULT_FROM: ${EMAIL_DEAFULT_FROM}
      MAX_FILE_SIZE_MB: ${MAX_FILE_SIZE_MB}
      RUL_ASU_BET: ${RUL_ASU_BET}
      ALLOWED_FILE_TYPES: ${ALLOWED_FILE_TYPES}    
    deploy:
      mode: replicated
      replicas: ${REPLICAS}
    restart: unless-stopped
    command: bash -c "entrypoint-sh"
    depends_on:
      - postgresql
      - redis

  nginx:
    build: ./nginx
    volumes:
      - static:/web/static
      - media:/web/media
    depends_on:
      - django
    networks:
      - default
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${SERVICE_NAME}.rule=Host(`${NGINX_HOST}`)"
      - "traefik.http.routers.${SERVICE_NAME}.entrypoints=websecure"
      - "traefik.http.routers.${SERVICE_NAME}.tls.certresolver=myresolver"
      - "traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=80"

volumes:
  postgres_data:
  redis_data:
  static:
  media:

networks:
  default:
  proxy:
    external: true
